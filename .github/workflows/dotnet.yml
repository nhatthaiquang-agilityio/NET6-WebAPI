name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Publish
      run: dotnet publish NET6.WebAPI/NET6.WebAPI.csproj -c Release -o webapi

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.2
      with:
        name: webapi
        path: webapi/**
        if-no-files-found: error

  # deploy_test:
  #   needs: build
  #   runs-on: self-hosted
  #   env:
  #     app-name: 'webapi'
  #     app-pool-name: 'webapi-pool'
  #     physical-path: 'C:\deployments\webapi'
  #     IIS_WEBSITE_NAME: 'Default Web Site'
  #     user-service: ''
  #     password-service: ''

  #   environment:
  #     name: Test

  #   steps:
  #   - name: Download a Build Artifact
  #     uses: actions/download-artifact@v2.0.8
  #     with:
  #       name: webapi
  #       path: '${{ env.physical-path }}'

  #   - name: Create Application Pool
  #     shell: cmd
  #     run: |
  #       C:\Windows\System32\inetsrv\appcmd.exe add apppool /name:${{ env.app-pool-name }} /managedRuntimeVersion:v4.0 /managedPipelineMode:Integrated

  #   - name: Deploy Application
  #     shell: cmd
  #     run: |
  #       "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" -verb:sync -source:iisApp="${{ env.physical-path }}" -dest:iisApp="${{ env.IIS_WEBSITE_NAME }}/${{ env.app-name }}"

  #   - name: Set an Application Pool for an Application
  #     shell: cmd
  #     run: |
  #       C:\Windows\System32\inetsrv\appcmd.exe set apppool "${{ env.app-pool-name }}" /processModel.identityType:"SpecificUser" /processModel.userName:"${{ env.user-service }}" /processModel.password:"${{ env.password-service }}"

  #   - name: Start Application Pool
  #     shell: cmd
  #     run: |
  #       "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" -verb:sync -source:recycleApp -dest:recycleApp="${{ env.IIS_WEBSITE_NAME }}/${{ env.app-name }}",recycleMode="StartAppPool"

  # deploy_test_powershell:
  #   needs: build
  #   runs-on: self-hosted
  #   env:
  #     app_name: 'webapipowershell'
  #     app_pool_name: 'webapi-powershell-pool'
  #     physical_path: 'D:\deployments\webapipowershell'
  #     IIS_WEBSITE_NAME: 'Default Web Site'
  #     user_service: 'net6webapp'
  #     password_service: 'password@123'
  #   environment:
  #     name: Test

  #   steps:
  #   - name: Download a Build Artifact
  #     uses: actions/download-artifact@v2.0.8
  #     with:
  #       name: webapi
  #       path: '${{ env.physical_path }}'

  #   - name: Deploy WebAPI with PowerShell
  #     uses: nhatthai/deploy-webapp-iis@0.0.3
  #     with:
  #       app_name: '${{ env.app_name }}'
  #       app_pool_name: '${{ env.app_pool_name }}'
  #       physical_path: '${{ env.physical_path }}'

  deploy_stage:
    needs: build
    runs-on: windows-latest
    env:
      app-name: 'webapi'
      app-pool-name: 'webapi-pool'
      physical-path: 'C:\deployments\webapi'
      IIS_WEBSITE_NAME: 'Default Web Site'
      IIS_SERVER_COMPUTER_NAME: '139.180.144.223'
      IIS_SERVER_USERNAME: 'Administrator'
      IIS_SERVER_PASSWORD: ${{ secrets.IIS_SERVER_PASSWORD }}
      user-service: ''
      password-service: ''

    environment:
      name: Stage

    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.8
      with:
        name: webapi
        path: '${{ env.physical-path }}'

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    # - name: Create Application Pool
    #   shell: powershell
    #   run: |
    #     try
    #     {
    #       C:\Windows\System32\inetsrv\appcmd.exe add apppool /name:${{ env.app-pool-name }} /managedRuntimeVersion:v4.0 /managedPipelineMode:Integrated
    #     }
    #     catch
    #     {
    #       Write-Output "Exist Application Pool"
    #     }
    - name: IIS Start
      uses: 'im-open/app-pool-action@v2.0.0'
      with:
        action: 'start'
        server: ${{ env.IIS_SERVER_COMPUTER_NAME }}
        app-pool-name: ${{ env.app-pool-name }}
        service-account-id: ${{ env.IIS_SERVER_USERNAME }}
        service-account-password: ${{ secrets.IIS_SERVER_PASSWORD }}

    - name: Deploy Application
      shell: cmd
      run: |
        "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" -verb:sync -allowUntrusted:true -source:iisApp="${{ env.physical-path }}" -dest:iisApp="${{ env.IIS_WEBSITE_NAME }}/${{ env.app-name }}",wmsvc="${{ env.IIS_SERVER_COMPUTER_NAME }}",username="${{ env.IIS_SERVER_USERNAME }}",password="${{ env.IIS_SERVER_PASSWORD }}",AuthType="Basic"

    # - name: Set an Application Pool for an Application
    #   shell: powershell
    #   run: |
    #     try
    #     {
    #       C:\Windows\System32\inetsrv\appcmd.exe set apppool "${{ env.app-pool-name }}" /processModel.identityType:"SpecificUser" /processModel.userName:"${{ env.user-service }}" /processModel.password:"${{ env.password-service }}"
    #     }
    #     catch
    #     {
    #       Write-Output "Unable to set property in Application Pool"
    #     }
    - name: Start Application Pool
      shell: cmd
      run: |
        "C:\Program Files (x86)\IIS\Microsoft Web Deploy V3\msdeploy.exe" -verb:sync -allowUntrusted:true -source:recycleApp -dest:recycleApp="${{ env.app-name }}",recycleMode="StartAppPool",wmsvc="${{ env.IIS_SERVER_COMPUTER_NAME }}",username="${{ env.IIS_SERVER_USERNAME }}",password="${{ env.IIS_SERVER_PASSWORD }}",AuthType="Basic"
